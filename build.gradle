import java.util.Locale

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.smband'
version = '1.0'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}
configurations {
	jaxb
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	
	implementation 'wsdl4j:wsdl4j'
	jaxb("org.glassfish.jaxb:jaxb-xjc")
	
	
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
/*
sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir 'build/generated-sources/jaxb'
		}
	}
}
*/


bootJar {
	//archiveBaseName = 'gs-producing-web-svc'
	//archiveVersion = '0.1.0'
}

task genJaxb {
	ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
	ext.schema = "src/main/resources/countries.xsd"
	//ext.defaultLocale = Locale.getDefault();
	
	outputs.dir sourcesDir
	
	doLast() {
		Locale defaultLocale = Locale.getDefault();
		Locale.setDefault(Locale.US);
		project.ant {
			taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask", classpath: configurations.jaxb.asPath
			mkdir(dir: sourcesDir)
			
			xjc(destdir: sourcesDir, schema: schema) {
				arg(value: "-wsdl")
				arg(value: "-p")
				arg(value: "com.smband.soap.model")
				
				//arg(value: "-encoding utf-8")
				produces(dir: sourcesDir, includes: "**/*.java")
			}
			
		}
		Locale.setDefault(defaultLocale)
		//tasks.copySoapJava.execute()
	}
}

// jaxb로 생성된 java 파일 프로젝트에 추가하기.
tasks.register('copySoapJava', Copy) {
	dependsOn genJaxb

	from "${buildDir}/generated-sources/jaxb"
	into 'src/main/java'
}

compileJava.dependsOn copySoapJava

tasks.named('test') {
	useJUnitPlatform()
}
