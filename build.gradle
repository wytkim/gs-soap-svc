//import java.util.Locale

plugins {
	id 'java'
	//id 'org.springframework.boot' version '3.0.1'
	//id 'io.spring.dependency-management' version '1.1.0'
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.smband'
version = '1.0'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

configurations {
	jaxb
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	
	implementation "javax.annotation:javax.annotation-api:1.3.2"
	// java 11 => boot 3.0.1 일때는 제거해도 됨.
	implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
	implementation 'com.sun.xml.bind:jaxb-impl:2.3.8'
	
	implementation 'wsdl4j:wsdl4j'
	jaxb("org.glassfish.jaxb:jaxb-xjc")
	
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.ws:spring-ws-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task genJaxb {
	ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
	ext.schema = "src/main/resources/countries.xsd"
	//outputs.dir sourcesDir
	
	doLast() {
		//Locale defaultLocale = Locale.getDefault();
		//Locale.setDefault(Locale.US);
		project.ant {
			taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask", classpath: configurations.jaxb.asPath
			mkdir(dir: sourcesDir)
			
			xjc(destdir: sourcesDir, schema: schema, package: "com.smband.soap.model", encoding: "utf-8") {
				//arg(value: "-wsdl")
				//arg(value: "-encoding")
				//arg(value: "utf-8")
				
				produces(dir: sourcesDir, includes: "**/*.java")
			}
		}
		//Locale.setDefault(defaultLocale)
	}
}

// jaxb로 생성된 java 파일 프로젝트에 추가하기.
tasks.register('copySoapJava', Copy) {
	dependsOn genJaxb

	from "${buildDir}/generated-sources/jaxb"
	into 'src/main/java'
}

//compileJava.dependsOn copySoapJava

tasks.named('test') {
	useJUnitPlatform()
}
